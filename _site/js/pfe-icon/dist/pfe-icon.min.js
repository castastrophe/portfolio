import e from"../../pfelement/dist/pfelement.min.js";!function(){if("function"==typeof window.CustomEvent)return!1;window.CustomEvent=function(e,o){o=o||{bubbles:!1,cancelable:!1,detail:null};var t=document.createEvent("CustomEvent");return t.initCustomEvent(e,o.bubbles,o.cancelable,o.detail),t}}();class o{resolveIconName(e){return this._resolveIconName(e,this.name,this.path)}constructor(e,o,t){this.name=e,this.path=o,this._resolveIconName=t}}class t extends e{static get version(){return"1.3.0"}get html(){return'\n<style>@media screen and (-ms-high-contrast:active),screen and (-ms-high-contrast:none){:host{color:#151515!important}}:host([on=dark]){--pfe-broadcasted--text:var(--pfe-theme--color--text--on-dark, #fff);--pfe-broadcasted--link:var(--pfe-theme--color--link--on-dark, #73bcf7);--pfe-broadcasted--link--hover:var(--pfe-theme--color--link--hover--on-dark, #bee1f4);--pfe-broadcasted--link--focus:var(--pfe-theme--color--link--focus--on-dark, #bee1f4);--pfe-broadcasted--link--visited:var(--pfe-theme--color--link--visited--on-dark, #bee1f4);--pfe-broadcasted--link-decoration:var(--pfe-theme--link-decoration--on-dark, none);--pfe-broadcasted--link-decoration--hover:var(--pfe-theme--link-decoration--hover--on-dark, underline);--pfe-broadcasted--link-decoration--focus:var(--pfe-theme--link-decoration--focus--on-dark, underline);--pfe-broadcasted--link-decoration--visited:var(--pfe-theme--link-decoration--visited--on-dark, none)}:host([on=saturated]){--pfe-broadcasted--text:var(--pfe-theme--color--text--on-saturated, #fff);--pfe-broadcasted--link:var(--pfe-theme--color--link--on-saturated, #fff);--pfe-broadcasted--link--hover:var(--pfe-theme--color--link--hover--on-saturated, #fafafa);--pfe-broadcasted--link--focus:var(--pfe-theme--color--link--focus--on-saturated, #fafafa);--pfe-broadcasted--link--visited:var(--pfe-theme--color--link--visited--on-saturated, #d2d2d2);--pfe-broadcasted--link-decoration:var(--pfe-theme--link-decoration--on-saturated, underline);--pfe-broadcasted--link-decoration--hover:var(--pfe-theme--link-decoration--hover--on-saturated, underline);--pfe-broadcasted--link-decoration--focus:var(--pfe-theme--link-decoration--focus--on-saturated, underline);--pfe-broadcasted--link-decoration--visited:var(--pfe-theme--link-decoration--visited--on-saturated, underline)}:host([on=light]){--pfe-broadcasted--text:var(--pfe-theme--color--text, #151515);--pfe-broadcasted--link:var(--pfe-theme--color--link, #06c);--pfe-broadcasted--link--hover:var(--pfe-theme--color--link--hover, #004080);--pfe-broadcasted--link--focus:var(--pfe-theme--color--link--focus, #004080);--pfe-broadcasted--link--visited:var(--pfe-theme--color--link--visited, #6753ac);--pfe-broadcasted--link-decoration:var(--pfe-theme--link-decoration, none);--pfe-broadcasted--link-decoration--hover:var(--pfe-theme--link-decoration--hover, underline);--pfe-broadcasted--link-decoration--focus:var(--pfe-theme--link-decoration--focus, underline);--pfe-broadcasted--link-decoration--visited:var(--pfe-theme--link-decoration--visited, none)}:host{--context:var(--pfe-icon--context, light);position:relative;display:inline-block;max-width:calc(1em + 0 * 2);max-width:calc(var(--pfe-icon--size,var(--pfe-theme--icon-size,1em)) + var(--pfe-icon--Padding,0) * 2);width:-webkit-fit-content!important;width:-moz-fit-content!important;width:fit-content!important;max-height:calc(1em + 0 * 2);max-height:calc(var(--pfe-icon--size,var(--pfe-theme--icon-size,1em)) + var(--pfe-icon--Padding,0) * 2);height:-webkit-fit-content!important;height:-moz-fit-content!important;height:fit-content!important;line-height:0}:host([block]){display:block;margin-bottom:1rem;margin-bottom:var(--pfe-icon--spacing,var(--pfe-theme--container-spacer,1rem));margin-top:1rem;margin-top:var(--pfe-icon--spacing,var(--pfe-theme--container-spacer,1rem))}:host([block]):first-child{margin-top:0}:host svg{width:1em;width:var(--pfe-icon--size,var(--pfe-theme--icon-size,1em));height:1em;height:var(--pfe-icon--size,var(--pfe-theme--icon-size,1em))}:host(:not(.load-failed)){vertical-align:middle;border-radius:50%;background-color:transparent;background-color:var(--pfe-icon--BackgroundColor,transparent);border:0 solid transparent;border:var(--pfe-icon--BorderWidth,0) var(--pfe-theme--ui--border-style,solid) var(--pfe-icon--BorderColor,var(--pfe-icon--color,transparent));padding:0;padding:var(--pfe-icon--Padding,0)}@media screen and (-ms-high-contrast:active),screen and (-ms-high-contrast:none){:host(:not(.load-failed)){background-color:#fff!important}:host(:not(.load-failed)) svg filter feFlood{flood-color:#000!important}}@supports (-ms-accelerator:true){:host(:not(.load-failed)){background-color:#fff!important}:host(:not(.load-failed)) svg filter feFlood{flood-color:#000!important}}@media screen and (-ms-high-contrast:active),screen and (-ms-high-contrast:none){:host(:not(.load-failed)) svg image{-webkit-filter:none;filter:none}}:host(:not(.load-failed)) filter feFlood{flood-color:#3c3f42;flood-color:var(--pfe-icon--Color,var(--pfe-icon--color,var(--pfe-broadcasted--text,#3c3f42)))}:host(:not(.load-failed)) .pfe-icon--fallback{display:none}:host([size="2x"]){--pfe-icon--size:2em}:host([size="3x"]){--pfe-icon--size:3em}:host([size="4x"]){--pfe-icon--size:4em}:host([size=xl]){--pfe-icon--size:100px}:host([size=lg]){--pfe-icon--size:64px}:host([size=md]){--pfe-icon--size:32px}:host([size=sm]){--pfe-icon--size:14px}:host([color=critical]){--pfe-icon--color:var(--pfe-theme--color--feedback--critical, #a30000);--pfe-icon--context:dark}:host([color=important]){--pfe-icon--color:var(--pfe-theme--color--feedback--important, #c9190b);--pfe-icon--context:dark}:host([color=moderate]){--pfe-icon--color:var(--pfe-theme--color--feedback--moderate, #f0ab00)}:host([color=success]){--pfe-icon--color:var(--pfe-theme--color--feedback--success, #3e8635);--pfe-icon--context:dark}:host([color=info]){--pfe-icon--color:var(--pfe-theme--color--feedback--info, #06c);--pfe-icon--context:dark}:host([color=default]){--pfe-icon--color:var(--pfe-theme--color--feedback--default, #4f5255);--pfe-icon--context:dark}:host([color=lightest]){--pfe-icon--color:var(--pfe-theme--color--surface--lightest, #fff);--pfe-icon--context:var(--pfe-theme--color--surface--lightest--context, light)}:host([color=base]){--pfe-icon--color:var(--pfe-theme--color--surface--base, #f0f0f0);--pfe-icon--context:var(--pfe-theme--color--surface--base--context, light)}:host([color=darker]){--pfe-icon--color:var(--pfe-theme--color--surface--darker, #3c3f42);--pfe-icon--context:var(--pfe-theme--color--surface--darker--context, dark)}:host([color=darkest]){--pfe-icon--color:var(--pfe-theme--color--surface--darkest, #151515);--pfe-icon--context:var(--pfe-theme--color--surface--darkest--context, dark)}:host([color=complement]){--pfe-icon--color:var(--pfe-theme--color--surface--complement, #002952);--pfe-icon--context:var(--pfe-theme--color--surface--complement--context, saturated)}:host([color=accent]){--pfe-icon--color:var(--pfe-theme--color--surface--accent, #004080);--pfe-icon--context:var(--pfe-theme--color--surface--accent--context, saturated)}:host([circled]:not([circled=false])){--pfe-icon--BackgroundColor:var(--pfe-icon--color, var(--pfe-theme--color--surface--lightest, #fff));--pfe-icon--Color:var(--pfe-broadcasted--text, #3c3f42);--pfe-icon--Padding:.5em;--pfe-icon--BorderWidth:var(--pfe-theme--ui--border-width, 1px);--pfe-icon--BorderColor:var(--pfe-icon--color, var(--pfe-theme--color--surface--border, #d2d2d2))}:host(.load-failed) svg image{display:none}:host(.load-failed.has-fallback) svg,:host(.load-failed[on-fail=collapse]) svg{display:none}:host(.load-failed[on-fail=collapse]){--pfe-icon--size:0} /*# sourceMappingURL=pfe-icon.min.css.map */</style>\n<div class="pfe-icon--fallback">\n  <slot></slot>\n</div>\n<svg xmlns="http://www.w3.org/2000/svg">\n  <filter color-interpolation-filters="sRGB" x="0" y="0" height="100%" width="100%">\n    <feFlood result="COLOR" />\n    <feComposite operator="in" in="COLOR" in2="SourceAlpha" />\n  </filter>\n  <image xlink:href="" width="100%" height="100%"></image>\n</svg>'}static get tag(){return"pfe-icon"}get templateUrl(){return"pfe-icon.html"}get styleUrl(){return"pfe-icon.scss"}get schemaUrl(){return"pfe-icon.json"}static get PfeType(){return e.PfeTypes.Content}static get properties(){return{icon:{type:String,observer:"updateIcon",prefix:!1},size:{type:String,values:["xl","lg","md","sm","1x","2x","3x","4x"],default:"1x"},color:{type:String,values:["complement","accent","lightest","base","darker","darkest","critical","important","moderate","success","info"],observer:"_colorChanged"},onFail:{type:String,values:["collapse"]},circled:{type:Boolean},block:{type:Boolean},oldColor:{type:String,alias:"color",attr:"pfe-color"},oldSize:{type:String,alias:"size",attr:"pfe-size"},oldCircled:{type:Boolean,alias:"circled",attr:"pfe-circled"},oldBlock:{type:Boolean,alias:"block",attr:"data-block"}}}static get EVENTS(){return{ADD_ICON_SET:`${this.tag}:add-icon-set`}}get upgraded(){return this.image.hasAttribute("xlink:href")}_iconLoad(){this.classList.remove("load-failed")}_iconLoadError(e){this.classList.add("load-failed"),this.hasLightDOM()&&this.classList.add("has-fallback")}_colorChanged(){this.resetContext()}constructor(){super(t,{type:t.PfeType}),this._iconLoad=this._iconLoad.bind(this),this._iconLoadError=this._iconLoadError.bind(this),this.image=this.shadowRoot.querySelector("svg image"),this.image&&(this.image.addEventListener("load",this._iconLoad),this.image.addEventListener("error",this._iconLoadError)),document.body.addEventListener(t.EVENTS.ADD_ICON_SET,()=>this.updateIcon())}disconnectedCallback(){super.disconnectedCallback(),this.image&&(this.image.removeEventListener("load",this._iconLoad),this.image.removeEventListener("error",this._iconLoadError))}updateIcon(){const{set:e}=t.getIconSet(this.icon);if(e){const o=e.resolveIconName(this.icon);this.image.setAttribute("xlink:href",o),
/*!
 * PatternFly Elements: PfeIcon 1.3.0
 * @license
 * Copyright 2021 Red Hat, Inc.
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 * 
*/
function(e){const o="filter-"+Math.random().toString().slice(2,10);e.shadowRoot.querySelector("svg image").style.filter=`url(#${o})`,e.shadowRoot.querySelector("svg filter").setAttribute("id",o)}(this)}}static getIconSet(e){let o;if(e){const[t]=e.split("-");o=this._iconSets[t]}return{set:o}}static addIconSet(e,r,a){let i;"function"==typeof a?i=a:void 0===a&&this._iconSets[e]&&"function"==typeof this._iconSets[e]._resolveIconName?i=this._iconSets[e]._resolveIconName:"function"!=typeof a&&void 0!==a?t.warn(`[${this.tag}]: The third input to addIconSet should be a function that parses and returns the icon's filename.`):t.warn(`[${this.tag}]: The set ${e} needs a resolve function for the icon names.`),this._iconSets[e]=new o(e,r,i),document.body.dispatchEvent(new CustomEvent(this.EVENTS.ADD_ICON_SET,{bubbles:!1,detail:{set:this._iconSets[e]}}))}}t._iconSets={},function(e){[{name:"web",path:"https://access.redhat.com/webassets/avalon/j/lib/rh-iconfont-svgs"},{name:"rh",path:"https://access.redhat.com/webassets/avalon/j/lib/rh-iconfont-svgs"}].forEach(o=>e.addIconSet(o.name,o.path,(e,o,t)=>{const r=new RegExp(`^${o}(-icon)?-(.*)`),[,,a]=r.exec(e);return`${t}/${`${o}-icon-${a}`}.svg`}))}(t),e.create(t);export default t;
//# sourceMappingURL=pfe-icon.min.js.map
