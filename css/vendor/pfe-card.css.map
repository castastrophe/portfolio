{"version":3,"sources":["pfe-card.scss","../../pfe-sass/mixins/_custom-properties.scss","pfe-card.css","../../pfe-sass/mixins/_mixins.scss"],"names":[],"mappings":"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","file":"pfe-card.css","sourcesContent":["@import \"../../pfe-sass/pfe-sass\";\n\n$LOCAL: card;\n\n\n$variables: (\n\n  // Individual padding overrides available\n  PaddingTop: calc(#{pfe-var(container-spacer)} * 2),\n  PaddingRight: calc(#{pfe-var(container-spacer)} * 2),\n  PaddingBottom: calc(#{pfe-var(container-spacer)} * 2),\n  PaddingLeft: calc(#{pfe-var(container-spacer)} * 2),\n\n  // Combine above variables or allow single override point via variable\n  Padding: #{pfe-local(PaddingTop)} #{pfe-local(PaddingRight)} #{pfe-local(PaddingBottom)} #{pfe-local(PaddingLeft)},\n\n  //-- Border settings\n  BorderRadius: pfe-var(surface--border-radius),\n\n  //-- Border variable encompasses width, style, and color\n  Border: #{pfe-local(BorderWeight, 0)} #{pfe-local(BorderStyle, solid)} #{pfe-local(BorderColor, transparent)},\n\n  //-- Color properties\n  BackgroundColor: pfe-color(surface--base),\n  BackgroundPosition: center center,\n\n  spacing: pfe-var(container-spacer),\n\n  // Internal spacing; elements inside the card (header, body, footer regions)\n  spacing--vertical: pfe-local(spacing),\n\n  header: (\n    BackgroundColor: rgba(45, 45, 45, #{pfe-var(opacity)}),\n    Color:           pfe-apply-broadcast(text)\n  ),\n\n  footer: (\n    spacing--horizontal: calc(#{pfe-var(container-spacer)} / 2)\n  )\n\n);\n\n:host {\n  @include pfe-print-variables($variables);\n  \n  // Broadcasted values set to match background color\n  @include pfe-set-broadcast-theme(light);\n  --theme: light;\n\n  // Start of style declarations for host element\n  display: flex;\n  flex-direction: column;\n  justify-items: flex-start;\n  // This allows the card to fill it's container if necessary\n  align-self: stretch;\n\n  padding:       #{pfe-local(Padding)};\n  border:        #{pfe-local(Border)};\n  border-radius: #{pfe-local(BorderRadius)};\n\n  // This property ensures that children in the slots do no overflow\n  // the border-radius being set on the container\n  overflow: hidden;\n\n  // Base colors\n  background-color:    #{pfe-local(BackgroundColor)};\n  background-position: #{pfe-local(BackgroundPosition)};\n  color: #{pfe-apply-broadcast(text)};\n\n  // Remove background color for print\n  @include pfe-no-print-background;\n\n  // Add the border to the card for print\n  @include pfe-print-media {\n    border-radius: #{map-get($pfe-vars, surface--border-radius)};\n    border: #{map-get($pfe-vars, surface--border-width) map-get($pfe-vars, surface--border-style) map-get($pfe-colors, surface--border)};\n  }\n\n  @include browser-query(ie11) {\n    background-color: #{pfe-color(surface--lightest)} !important;\n    color: #{pfe-color(text)} !important;\n    background-image: none !important;\n    border-radius: #{map-get($pfe-vars, surface--border-radius)};\n    border: #{map-get($pfe-vars, surface--border-width) map-get($pfe-vars, surface--border-style) map-get($pfe-colors, surface--border)};\n    padding: calc(#{pfe-var(container-spacer)});\n  }\n}\n\n// Pull in pfe-color settings for all supported surface colors\n@include pfe-surfaces;\n\n@include pfe-theme-contexts; // imports on=\"light\" etc support\n\n:host([pfe-size=\"small\"]) {\n  --pfe-card--PaddingTop:     #{pfe-var(container-spacer)};\n  --pfe-card--PaddingRight:   #{pfe-var(container-spacer)};\n  --pfe-card--PaddingBottom:  #{pfe-var(container-spacer)};\n  --pfe-card--PaddingLeft:    #{pfe-var(container-spacer)};\n}\n\n// Targets the wrappers in the shadow DOM\n.pfe-card {\n  &__header,\n  &__body,\n  &__footer {\n    ::slotted([pfe-overflow~=\"top\"]) {\n      z-index: 1;\n      margin-top: -2rem; //IE11 fallback\n      margin-top: calc(-1 * #{pfe-local(PaddingTop)}) !important;\n      :host([has_header]) & {\n        padding-top: #{pfe-local(spacing)};\n      }\n    }\n\n    ::slotted([pfe-overflow~=\"right\"]) {\n      margin-right: -2rem; //IE11 fallback\n      margin-right: calc(-1 * #{pfe-local(PaddingRight)});\n    }\n\n    ::slotted([pfe-overflow~=\"bottom\"]) {\n      margin-bottom: -2rem; //IE11 fallback\n      margin-bottom: calc(-1 * calc(#{pfe-local(PaddingBottom)} + #{pfe-local(BorderRadius)}));\n      align-self: flex-end;\n    }\n\n    ::slotted([pfe-overflow~=\"left\"]) {\n      margin-left: -2rem; //IE11 fallback\n      margin-left: calc(-1 * #{pfe-local(PaddingLeft)});\n    }\n\n    ::slotted(img) {\n      max-width: 100% !important;\n      align-self: flex-start; //Don't stretch image 100% with other Flexbox items in card.\n      object-fit: cover; // Fix distortion\n    }\n\n    ::slotted(img:not[pfe-overflow]) {\n      align-self: flex-start; //Don't stretch image 100% with other Flexbox items in card.\n    }\n\n    ::slotted(img[pfe-overflow~=\"right\"]) {\n      max-width: calc(100% + 2rem) !important; //IE11 fallback\n      max-width: calc(100% + #{pfe-local(PaddingRight)}) !important;\n    }\n\n    ::slotted(img[pfe-overflow~=\"left\"]) {\n      max-width: calc(100% + 2rem) !important; //IE11 fallback\n      max-width: calc(100% + #{pfe-local(PaddingLeft)}) !important;\n    }\n\n    ::slotted(img[pfe-overflow~=\"right\"][pfe-overflow~=\"left\"]) {\n      max-width: calc(100% + 4rem) !important; //IE11 fallback\n      max-width: calc(100% + calc(#{pfe-local(PaddingRight)} + #{pfe-local(PaddingLeft)})) !important;\n    }\n  }\n  &__header {\n    z-index: 2;\n    // Declare the header background color\n    background-color: #{pfe-local($cssvar: BackgroundColor, $region: header)};\n    color:            #{pfe-local($cssvar: Color, $region: header)};\n    @include browser-query(ie11) {\n      background-color: #{map-get($pfe-colors, surface--lighter)} !important;\n      color: #{pfe-color(text)} !important;\n    }\n\n    // Margin styles on header region\n    margin-top:    calc(#{pfe-local(PaddingTop)} * -1) !important;\n    margin-right:  calc(#{pfe-local(PaddingRight)} * -1);\n    margin-bottom: #{pfe-local(spacing--vertical)};\n    margin-left:   calc(#{pfe-local(PaddingLeft)} * -1);\n\n    // Padding for the header region\n    padding-top:    #{pfe-local(spacing--vertical)};\n    padding-right:  #{pfe-local(PaddingRight)};\n    padding-left:   #{pfe-local(PaddingLeft)};\n    padding-bottom: #{pfe-local(spacing--vertical)};\n\n    :host(:not([has_body],[has_footer])) & {\n      margin-bottom: #{pfe-local(PaddingBottom)};\n    }\n\n    ::slotted([pfe-overflow~=\"top\"]) {\n      --pfe-card__overflow--MarginTop: calc(#{pfe-local(PaddingTop)} * -1);\n    }\n\n    :host([has_body],[has_footer]) & ::slotted([pfe-overflow~=\"bottom\"]) {\n      --pfe-card__overflow--MarginBottom: calc(#{pfe-local(spacing--vertical)} * -1);\n    }\n\n    ::slotted([pfe-overflow~=\"bottom\"]) {\n      --pfe-card__overflow--MarginBottom: calc(#{pfe-local(PaddingBottom)} * -1);\n    }\n\n    @each $tag in (h1, h2, h3, h4, h5, h6) {\n      ::slotted(#{$tag}) {\n        margin-bottom: 0;\n      }\n    }\n  }\n  &__body {\n    :host(:not([has_header])) & ::slotted([pfe-overflow~=\"top\"]) {\n      --pfe-card__overflow--MarginTop: calc(#{pfe-local(PaddingTop)} * -1);\n    }\n\n    ::slotted([pfe-overflow~=\"top\"]) {\n      z-index: 1;\n      --pfe-card__overflow--MarginTop: calc(#{pfe-local(spacing--vertical)} * -1);\n    }\n\n    ::slotted([pfe-overflow~=\"bottom\"]) {\n      --pfe-card__overflow--MarginBottom: calc(#{pfe-local(PaddingBottom)} * -1);\n    }\n\n    :host([has_footer]) & ::slotted([pfe-overflow~=\"bottom\"]) {\n      --pfe-card__overflow--MarginBottom: calc(#{pfe-local(spacing--vertical)} * -1);\n    }\n  }\n  &__footer {\n    margin-top: auto; // This allows the footer to move to the very bottom\n\n    display: flex;\n    flex-direction: #{pfe-local($cssvar: Row, $region: footer, $fallback: row)};\n    flex-wrap: #{pfe-local($cssvar: Wrap, $region: footer, $fallback: wrap)};\n    // Aligns buttons and CTAs\n    align-items: #{pfe-local($cssvar: AlignItems, $region: footer, $fallback: baseline)};\n\n    ::slotted([pfe-overflow~=\"bottom\"]) {\n      --pfe-card__overflow--MarginBottom: calc(#{pfe-local(PaddingBottom)} * -1);\n    }\n  }\n  &__header,\n  &__body {\n    &:not(:last-child) {\n      margin-bottom: #{pfe-local(spacing--vertical)};\n    }\n\n    //-- Slotted styles for typography\n    // Remove margins from typography inside the slots\n    @each $tag in (p, h1, h2, h3, h4, h5, h6) {\n      ::slotted(#{$tag}:first-child) {\n        // Remove top margins\n        margin-top: 0;\n      }\n    }\n  }\n}\n","/// ===========================================================================\n/// Broadcast mixin, for use with container components.\n///\n/// This will print all the broadcast variables, and set the value to the theme of your choosing, like on-dark or on-saturated.\n/// @param {String} $theme - Look up values from theme contexts, i.e. \"light\" or \"saturated\"\n/// @param {List | String} $broadcast [$BROADCAST-VARS] -  Optionally specify only one broadcast variable instead of the whole set, i.e. \"text\"\n/// @requires {String} $repo - Name of repo, which is \"pfe\"\n/// @requires {String} $BROADCAST-VARS - Default list of supported broadcast variables\n///\n/// @example Usage in a container component, i.e. pfe-card:\n/// ```\n///    :host {\n///      @include pfe-set-broadcast-theme(dark);\n///    }\n/// ```\n/// @output:\n/// ```\n///    :host {\n///   --pfe-broadcasted--text: var(--pfe-theme--color--text--on-dark, #fff);\n///   --pfe-broadcasted--link: var(--pfe-theme--color--link--on-dark, #99ccff);\n///   --pfe-broadcasted--link--hover: var(--pfe-theme--color--link--hover--on-dark, #cce6ff);\n///   --pfe-broadcasted--link--focus: var(--pfe-theme--color--link--focus--on-dark, #cce6ff);\n///   --pfe-broadcasted--link--visited: var(--pfe-theme--color--link--visited--on-dark, #b38cd9);\n///   --pfe-broadcasted--link-decoration: none;\n///   --pfe-broadcasted--link-decoration--hover: underline;\n///   --pfe-broadcasted--link-decoration--focus: underline;\n///   --pfe-broadcasted--link-decoration--visited: none;\n///    }\n/// ```\n/// ===========================================================================\n@mixin pfe-set-broadcast-theme($theme, $broadcast: $BROADCAST-VARS) {\n    @each $type in $broadcast {\n        $list: ();\n        $string: \"\";\n        $context: \"\";\n        $state: \"\";\n\n        @if str-starts-with($type, \"link\") {\n            $list: append($list, \"#{$type}\");\n\n            @each $s in (hover, focus, visited) {\n                $state: \"--#{$s}\";\n                $string: \"#{$type}#{$state}\";\n\n                @if not index($list, $string) {\n                    $list: append($list, \"#{$type}#{$state}\");\n                }\n            }\n        }\n        @else {\n            @if not index($list, $string) {\n                $list: append($list, \"#{$type}\");\n            }\n        }\n\n        @if index($THEMES, $theme) != null {\n            @if $theme != \"light\" {\n                $context: \"--on-#{$theme}\";\n            }\n        }\n        \n        @each $item in $list {\n            @if not index($BROADCAST-VARS, $type) {\n                @warn \"--#{$repo}-broadcasted--#{$item} variable is not in the $BROADCAST-VARS list.\";\n            }\n            @else if not map-has-key($pfe-broadcasted, #{$item}#{$context}) {\n                @warn \"#{$item}#{$context} value does not currently exist.\";\n            }\n            @else {\n                @if index($THEMES, $theme) != null {\n                    @if map-get($pfe-colors, $item) != null {\n                        --#{$repo}-broadcasted--#{$item}: var(--#{$repo}-theme--color--#{$item}#{$context}, #{map-get($pfe-broadcasted, #{$item}#{$context})});\n                    }\n                    @else if map-get($pfe-vars, $item) {\n                        --#{$repo}-broadcasted--#{$item}: var(--#{$repo}-theme--#{$item}#{$context}, #{map-get($pfe-broadcasted, #{$item}#{$context})});\n                    }\n                    @else {\n                        --#{$repo}-broadcasted--#{$item}: #{map-get($pfe-broadcasted, #{$item}#{$context})};\n                    }\n                }\n                @else {\n                    @error \"The #{$theme} context does not appear to be part of a supported theme.\";\n                }\n            }\n        }\n    }\n}\n\n/// ===========================================================================\n/// Define local variable\n///\n/// Returns CSS Variable for the local component-scoped variable\n///\n/// @param {String} $cssvar - Variable identifiers which are postfixed and combined using '--'\n/// @param {String} $value - The value of the css variable being defined\n/// @param {String} $region - Identifies the region or slot to which this is assigned\n/// @requires {String} $repo - Name of repo, which is \"pfe\"\n/// @requires {String} $LOCAL - Name of component, this is defined at the top of the sass file for the component\n/// @use -\n///     ```\n///     :host {\n///         padding-top:      #{pfe-local(paddingTop)};\n///         padding-bottom:   #{pfe-local(paddingBottom)};\n///     }\n///     ```\n/// ===========================================================================\n@mixin pfe-set-local($variables) {\n    @each $property, $value in $variables {\n        $name: \"--#{$property}\";\n        $styles: $value;\n\n        @if type-of($value) == \"map\" {\n            @each $prop, $v in $value {\n                $name: \"__#{$property}--#{$prop}\";\n                $styles: $v;\n\n                // Print the variable definition\n                --#{$repo}-#{$LOCAL}#{$name}: #{$styles};\n            }\n        }\n        @else {\n            // Print the variable definition\n            --#{$repo}-#{$LOCAL}#{$name}: #{$styles};\n        }\n    }\n}\n\n/// ===========================================================================\n/// @alias pfe-set-local\n/// ===========================================================================\n@mixin pfe-print-variables($variables) {\n    @include pfe-set-local($variables);\n}\n\n/// ===========================================================================\n/// Surface properties  \n/// This mixin creates an attribute for all the surface colors, then prints the local background color variable for the component, with the correct theme colors. \n/// @param {List | String} $surfaces [$SURFACES] - defaults to the global $SURFACES list of all supported colors\n/// @param {String} $attr-name [pfe-color] - defaults to pfe-color, optionally pass in a custom name for the data attribute\n///\n/// @example \n/// ```\n/// $LOCAL: band;\n/// @include surfaces;\n/// ```\n///\n/// @output\n/// ```\n/// :host([pfe-color=\"darker\"]) {\n///   --pfe-band--BackgroundColor: var(--pfe-theme--color--surface--darker, #464646);\n///   --theme: dark;\n/// }\n/// \n/// :host([pfe-color=\"darkest\"]) {\n///   --pfe-band--BackgroundColor: var(--pfe-theme--color--surface--darkest, #131313);\n///   --theme: dark;\n/// }\n/// \n/// :host([pfe-color=\"base\"]) {\n///   --pfe-band--BackgroundColor: var(--pfe-theme--color--surface--base, #dfdfdf);\n///   --theme: light;\n/// }\n/// \n/// :host([pfe-color=\"lighter\"]) {\n///   --pfe-band--BackgroundColor: var(--pfe-theme--color--surface--lighter, #ececec);\n///   --theme: light;\n/// }\n/// \n/// :host([pfe-color=\"lightest\"]) {\n///   --pfe-band--BackgroundColor: var(--pfe-theme--color--surface--lightest, #fff);\n///   --theme: light;\n/// }\n/// \n/// :host([pfe-color=\"accent\"]) {\n///   --pfe-band--BackgroundColor: var(--pfe-theme--color--surface--accent, #ee0000);\n///   --theme: saturated;\n/// }\n/// \n/// :host([pfe-color=\"complement\"]) {\n///   --pfe-band--BackgroundColor: var(--pfe-theme--color--surface--complement, #0477a4);\n///   --theme: saturated;\n/// }\n/// ```\n/// ===========================================================================\n@mixin pfe-surfaces($surfaces: $SURFACE, $attr-name: #{$repo}-color) {\n    @each $color in $surfaces {\n        $theme: #{pfe-get-theme(surface--#{$color}--theme)};\n        :host([#{$attr-name}=\"#{$color}\"]) {\n            @include pfe-set-local(\n                ( BackgroundColor: #{pfe-color(surface--#{$color})} )\n            );\n            --theme: #{pfe-color( surface--#{$color}--theme, #{$theme} );\n            @include browser-query(ie11) {\n                background-color: #{map-get($pfe-colors, surface--lightest)} !important;\n                color: #{pfe-color(text)} !important;\n            }\n        }\n    }\n}\n\n/// ===========================================================================\n/// Context properties\n///\n/// Prints the `on` attribute with IE11 fallbacks\n///\n/// @param {List} themes [$THEMES] - defaults to the global $THEMES list of all supported contexts\n/// @param {Boolean} ie-fallback [true] - defaults to true, prints IE11 fallbacks\n/// @example\n/// ```\n///   @include theme-contexts; // imports on=\"light\" etc support\n/// ```\n///\n/// @output\n/// ```\n/// :host([on=\"dark\"]) {\n///   --pfe-broadcasted--text: var(--pfe-theme--color--text--on-dark, #fff);\n///   --pfe-broadcasted--link: var(--pfe-theme--color--link--on-dark, #99ccff);\n///   --pfe-broadcasted--link--hover: var(--pfe-theme--color--link--hover--on-dark, #cce6ff);\n///   --pfe-broadcasted--link--focus: var(--pfe-theme--color--link--focus--on-dark, #cce6ff);\n///   --pfe-broadcasted--link--visited: var(--pfe-theme--color--link--visited--on-dark, #b38cd9);\n///   --pfe-broadcasted--link-decoration: none;\n///   --pfe-broadcasted--link-decoration--hover: underline;\n///   --pfe-broadcasted--link-decoration--focus: underline;\n///   --pfe-broadcasted--link-decoration--visited: none;\n/// }\n/// \n/// @media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: none) { /* IE10+ */\n///   :host([on=\"dark\"]) {\n///     color: #fff;\n///     color: var(--pfe-theme--color--text--on-dark, #fff);\n///   }\n/// }\n/// ```\n/// ...as well as all the values for :host([on=\"saturated\"])  and  :host([on=\"light\"]) \n/// ===========================================================================\n@mixin pfe-theme-contexts($themes: $THEMES, $ie-fallback: true) {\n    // Helper attributes to aid in theming\n    @each $theme in $themes {\n        :host([on=\"#{$theme}\"]) {\n            @include pfe-set-broadcast-theme($theme);\n        }\n        @if $ie-fallback {\n            @include browser-query(ie11) {\n                :host {\n                    color: #{pfe-color(text)} !important;\n                }\n            }\n        }\n    }\n}\n",":host {\n  --pfe-card--PaddingTop: calc(var(--pfe-theme--container-spacer, 16px) * 2);\n  --pfe-card--PaddingRight: calc(var(--pfe-theme--container-spacer, 16px) * 2);\n  --pfe-card--PaddingBottom: calc(var(--pfe-theme--container-spacer, 16px) * 2);\n  --pfe-card--PaddingLeft: calc(var(--pfe-theme--container-spacer, 16px) * 2);\n  --pfe-card--Padding: var(--pfe-card--PaddingTop) var(--pfe-card--PaddingRight) var(--pfe-card--PaddingBottom) var(--pfe-card--PaddingLeft);\n  --pfe-card--BorderRadius: var(--pfe-theme--surface--border-radius, 3px);\n  --pfe-card--Border: var(--pfe-card--BorderWeight, 0) var(--pfe-card--BorderStyle, solid) var(--pfe-card--BorderColor, transparent);\n  --pfe-card--BackgroundColor: var(--pfe-theme--color--surface--base, #dfdfdf);\n  --pfe-card--BackgroundPosition: center center;\n  --pfe-card--spacing: var(--pfe-theme--container-spacer, 16px);\n  --pfe-card--spacing--vertical: var(--pfe-card--spacing);\n  --pfe-card__header--BackgroundColor: rgba(45, 45, 45, var(--pfe-theme--opacity, 0.3));\n  --pfe-card__header--Color: var(--pfe-broadcasted--text, #333);\n  --pfe-card__footer--spacing--horizontal: calc(var(--pfe-theme--container-spacer, 16px) / 2);\n  --pfe-broadcasted--text: var(--pfe-theme--color--text, #333);\n  --pfe-broadcasted--link: var(--pfe-theme--color--link, #06c);\n  --pfe-broadcasted--link--hover: var(--pfe-theme--color--link--hover, #003366);\n  --pfe-broadcasted--link--focus: var(--pfe-theme--color--link--focus, #003366);\n  --pfe-broadcasted--link--visited: var(--pfe-theme--color--link--visited, rebeccapurple);\n  --pfe-broadcasted--link-decoration: none;\n  --pfe-broadcasted--link-decoration--hover: underline;\n  --pfe-broadcasted--link-decoration--focus: underline;\n  --pfe-broadcasted--link-decoration--visited: none;\n  --theme: light;\n  display: flex;\n  flex-direction: column;\n  justify-items: flex-start;\n  align-self: stretch;\n  padding: var(--pfe-card--Padding);\n  border: var(--pfe-card--Border);\n  border-radius: var(--pfe-card--BorderRadius);\n  overflow: hidden;\n  background-color: var(--pfe-card--BackgroundColor);\n  background-position: var(--pfe-card--BackgroundPosition);\n  color: var(--pfe-broadcasted--text, #333);\n}\n\n@media print {\n  :host {\n    background-color: white !important;\n    background-image: none !important;\n    box-shadow: none !important;\n  }\n}\n\n@media print {\n  :host {\n    border-radius: 3px;\n    border: 1px solid #d2d2d2;\n  }\n}\n\n@media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: none) {\n  :host {\n    /* IE10+ */\n    background-color: var(--pfe-theme--color--surface--lightest, #fff) !important;\n    color: var(--pfe-theme--color--text, #333) !important;\n    background-image: none !important;\n    border-radius: 3px;\n    border: 1px solid #d2d2d2;\n    padding: calc(var(--pfe-theme--container-spacer, 16px));\n  }\n}\n\n:host([pfe-color=\"darker\"]) {\n  --pfe-card--BackgroundColor: var(--pfe-theme--color--surface--darker, #464646);\n  --theme: var(--pfe-theme--color--surface--darker--theme, dark)\n        ;\n}\n\n:host([pfe-color=\"darkest\"]) {\n  --pfe-card--BackgroundColor: var(--pfe-theme--color--surface--darkest, #131313);\n  --theme: var(--pfe-theme--color--surface--darkest--theme, dark)\n        ;\n}\n\n:host([pfe-color=\"base\"]) {\n  --pfe-card--BackgroundColor: var(--pfe-theme--color--surface--base, #dfdfdf);\n  --theme: var(--pfe-theme--color--surface--base--theme, light)\n        ;\n}\n\n:host([pfe-color=\"lighter\"]) {\n  --pfe-card--BackgroundColor: var(--pfe-theme--color--surface--lighter, #ececec);\n  --theme: var(--pfe-theme--color--surface--lighter--theme, light)\n        ;\n}\n\n:host([pfe-color=\"lightest\"]) {\n  --pfe-card--BackgroundColor: var(--pfe-theme--color--surface--lightest, #fff);\n  --theme: var(--pfe-theme--color--surface--lightest--theme, light)\n        ;\n}\n\n:host([pfe-color=\"accent\"]) {\n  --pfe-card--BackgroundColor: var(--pfe-theme--color--surface--accent, #e00);\n  --theme: var(--pfe-theme--color--surface--accent--theme, saturated)\n        ;\n}\n\n:host([pfe-color=\"complement\"]) {\n  --pfe-card--BackgroundColor: var(--pfe-theme--color--surface--complement, #0477a4);\n  --theme: var(--pfe-theme--color--surface--complement--theme, saturated)\n        ;\n}\n\n:host([on=\"dark\"]) {\n  --pfe-broadcasted--text: var(--pfe-theme--color--text--on-dark, #fff);\n  --pfe-broadcasted--link: var(--pfe-theme--color--link--on-dark, #99ccff);\n  --pfe-broadcasted--link--hover: var(--pfe-theme--color--link--hover--on-dark, #cce6ff);\n  --pfe-broadcasted--link--focus: var(--pfe-theme--color--link--focus--on-dark, #cce6ff);\n  --pfe-broadcasted--link--visited: var(--pfe-theme--color--link--visited--on-dark, #b38cd9);\n  --pfe-broadcasted--link-decoration: none;\n  --pfe-broadcasted--link-decoration--hover: underline;\n  --pfe-broadcasted--link-decoration--focus: underline;\n  --pfe-broadcasted--link-decoration--visited: none;\n}\n\n@media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: none) {\n  /* IE10+ */\n  :host {\n    color: var(--pfe-theme--color--text, #333) !important;\n  }\n}\n\n:host([on=\"saturated\"]) {\n  --pfe-broadcasted--text: var(--pfe-theme--color--text--on-saturated, #fff);\n  --pfe-broadcasted--link: var(--pfe-theme--color--link--on-saturated, #fff);\n  --pfe-broadcasted--link--hover: var(--pfe-theme--color--link--hover--on-saturated, white);\n  --pfe-broadcasted--link--focus: var(--pfe-theme--color--link--focus--on-saturated, white);\n  --pfe-broadcasted--link--visited: var(--pfe-theme--color--link--visited--on-saturated, #b38cd9);\n  --pfe-broadcasted--link-decoration: underline;\n  --pfe-broadcasted--link-decoration--hover: underline;\n  --pfe-broadcasted--link-decoration--focus: underline;\n  --pfe-broadcasted--link-decoration--visited: underline;\n}\n\n@media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: none) {\n  /* IE10+ */\n  :host {\n    color: var(--pfe-theme--color--text, #333) !important;\n  }\n}\n\n:host([on=\"light\"]) {\n  --pfe-broadcasted--text: var(--pfe-theme--color--text, #333);\n  --pfe-broadcasted--link: var(--pfe-theme--color--link, #06c);\n  --pfe-broadcasted--link--hover: var(--pfe-theme--color--link--hover, #003366);\n  --pfe-broadcasted--link--focus: var(--pfe-theme--color--link--focus, #003366);\n  --pfe-broadcasted--link--visited: var(--pfe-theme--color--link--visited, rebeccapurple);\n  --pfe-broadcasted--link-decoration: none;\n  --pfe-broadcasted--link-decoration--hover: underline;\n  --pfe-broadcasted--link-decoration--focus: underline;\n  --pfe-broadcasted--link-decoration--visited: none;\n}\n\n@media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: none) {\n  /* IE10+ */\n  :host {\n    color: var(--pfe-theme--color--text, #333) !important;\n  }\n}\n\n:host([pfe-size=\"small\"]) {\n  --pfe-card--PaddingTop:     var(--pfe-theme--container-spacer, 16px);\n  --pfe-card--PaddingRight:   var(--pfe-theme--container-spacer, 16px);\n  --pfe-card--PaddingBottom:  var(--pfe-theme--container-spacer, 16px);\n  --pfe-card--PaddingLeft:    var(--pfe-theme--container-spacer, 16px);\n}\n\n.pfe-card__header ::slotted([pfe-overflow~=\"top\"]), .pfe-card__body ::slotted([pfe-overflow~=\"top\"]), .pfe-card__footer ::slotted([pfe-overflow~=\"top\"]) {\n  z-index: 1;\n  margin-top: -2rem;\n  margin-top: calc(-1 * var(--pfe-card--PaddingTop)) !important;\n}\n\n:host([has_header]) .pfe-card__header ::slotted([pfe-overflow~=\"top\"]), :host([has_header]) .pfe-card__body ::slotted([pfe-overflow~=\"top\"]), :host([has_header]) .pfe-card__footer ::slotted([pfe-overflow~=\"top\"]) {\n  padding-top: var(--pfe-card--spacing);\n}\n\n.pfe-card__header ::slotted([pfe-overflow~=\"right\"]), .pfe-card__body ::slotted([pfe-overflow~=\"right\"]), .pfe-card__footer ::slotted([pfe-overflow~=\"right\"]) {\n  margin-right: -2rem;\n  margin-right: calc(-1 * var(--pfe-card--PaddingRight));\n}\n\n.pfe-card__header ::slotted([pfe-overflow~=\"bottom\"]), .pfe-card__body ::slotted([pfe-overflow~=\"bottom\"]), .pfe-card__footer ::slotted([pfe-overflow~=\"bottom\"]) {\n  margin-bottom: -2rem;\n  margin-bottom: calc(-1 * calc(var(--pfe-card--PaddingBottom) + var(--pfe-card--BorderRadius)));\n  align-self: flex-end;\n}\n\n.pfe-card__header ::slotted([pfe-overflow~=\"left\"]), .pfe-card__body ::slotted([pfe-overflow~=\"left\"]), .pfe-card__footer ::slotted([pfe-overflow~=\"left\"]) {\n  margin-left: -2rem;\n  margin-left: calc(-1 * var(--pfe-card--PaddingLeft));\n}\n\n.pfe-card__header ::slotted(img), .pfe-card__body ::slotted(img), .pfe-card__footer ::slotted(img) {\n  max-width: 100% !important;\n  align-self: flex-start;\n  object-fit: cover;\n}\n\n.pfe-card__header ::slotted(img:not[pfe-overflow]), .pfe-card__body ::slotted(img:not[pfe-overflow]), .pfe-card__footer ::slotted(img:not[pfe-overflow]) {\n  align-self: flex-start;\n}\n\n.pfe-card__header ::slotted(img[pfe-overflow~=\"right\"]), .pfe-card__body ::slotted(img[pfe-overflow~=\"right\"]), .pfe-card__footer ::slotted(img[pfe-overflow~=\"right\"]) {\n  max-width: calc(100% + 2rem) !important;\n  max-width: calc(100% + var(--pfe-card--PaddingRight)) !important;\n}\n\n.pfe-card__header ::slotted(img[pfe-overflow~=\"left\"]), .pfe-card__body ::slotted(img[pfe-overflow~=\"left\"]), .pfe-card__footer ::slotted(img[pfe-overflow~=\"left\"]) {\n  max-width: calc(100% + 2rem) !important;\n  max-width: calc(100% + var(--pfe-card--PaddingLeft)) !important;\n}\n\n.pfe-card__header ::slotted(img[pfe-overflow~=\"right\"][pfe-overflow~=\"left\"]), .pfe-card__body ::slotted(img[pfe-overflow~=\"right\"][pfe-overflow~=\"left\"]), .pfe-card__footer ::slotted(img[pfe-overflow~=\"right\"][pfe-overflow~=\"left\"]) {\n  max-width: calc(100% + 4rem) !important;\n  max-width: calc(100% + calc(var(--pfe-card--PaddingRight) + var(--pfe-card--PaddingLeft))) !important;\n}\n\n.pfe-card__header {\n  z-index: 2;\n  background-color: var(--pfe-card__header--BackgroundColor);\n  color: var(--pfe-card__header--Color);\n  margin-top: calc(var(--pfe-card--PaddingTop) * -1) !important;\n  margin-right: calc(var(--pfe-card--PaddingRight) * -1);\n  margin-bottom: var(--pfe-card--spacing--vertical);\n  margin-left: calc(var(--pfe-card--PaddingLeft) * -1);\n  padding-top: var(--pfe-card--spacing--vertical);\n  padding-right: var(--pfe-card--PaddingRight);\n  padding-left: var(--pfe-card--PaddingLeft);\n  padding-bottom: var(--pfe-card--spacing--vertical);\n}\n\n@media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: none) {\n  .pfe-card__header {\n    /* IE10+ */\n    background-color: #ececec !important;\n    color: var(--pfe-theme--color--text, #333) !important;\n  }\n}\n\n:host(:not([has_body], [has_footer])) .pfe-card__header {\n  margin-bottom: var(--pfe-card--PaddingBottom);\n}\n\n.pfe-card__header ::slotted([pfe-overflow~=\"top\"]) {\n  --pfe-card__overflow--MarginTop: calc(var(--pfe-card--PaddingTop) * -1);\n}\n\n:host([has_body], [has_footer]) .pfe-card__header ::slotted([pfe-overflow~=\"bottom\"]) {\n  --pfe-card__overflow--MarginBottom: calc(var(--pfe-card--spacing--vertical) * -1);\n}\n\n.pfe-card__header ::slotted([pfe-overflow~=\"bottom\"]) {\n  --pfe-card__overflow--MarginBottom: calc(var(--pfe-card--PaddingBottom) * -1);\n}\n\n.pfe-card__header ::slotted(h1) {\n  margin-bottom: 0;\n}\n\n.pfe-card__header ::slotted(h2) {\n  margin-bottom: 0;\n}\n\n.pfe-card__header ::slotted(h3) {\n  margin-bottom: 0;\n}\n\n.pfe-card__header ::slotted(h4) {\n  margin-bottom: 0;\n}\n\n.pfe-card__header ::slotted(h5) {\n  margin-bottom: 0;\n}\n\n.pfe-card__header ::slotted(h6) {\n  margin-bottom: 0;\n}\n\n:host(:not([has_header])) .pfe-card__body ::slotted([pfe-overflow~=\"top\"]) {\n  --pfe-card__overflow--MarginTop: calc(var(--pfe-card--PaddingTop) * -1);\n}\n\n.pfe-card__body ::slotted([pfe-overflow~=\"top\"]) {\n  z-index: 1;\n  --pfe-card__overflow--MarginTop: calc(var(--pfe-card--spacing--vertical) * -1);\n}\n\n.pfe-card__body ::slotted([pfe-overflow~=\"bottom\"]) {\n  --pfe-card__overflow--MarginBottom: calc(var(--pfe-card--PaddingBottom) * -1);\n}\n\n:host([has_footer]) .pfe-card__body ::slotted([pfe-overflow~=\"bottom\"]) {\n  --pfe-card__overflow--MarginBottom: calc(var(--pfe-card--spacing--vertical) * -1);\n}\n\n.pfe-card__footer {\n  margin-top: auto;\n  display: flex;\n  flex-direction: var(--pfe-card__footer--Row, row);\n  flex-wrap: var(--pfe-card__footer--Wrap, wrap);\n  align-items: var(--pfe-card__footer--AlignItems, baseline);\n}\n\n.pfe-card__footer ::slotted([pfe-overflow~=\"bottom\"]) {\n  --pfe-card__overflow--MarginBottom: calc(var(--pfe-card--PaddingBottom) * -1);\n}\n\n.pfe-card__header:not(:last-child), .pfe-card__body:not(:last-child) {\n  margin-bottom: var(--pfe-card--spacing--vertical);\n}\n\n.pfe-card__header ::slotted(p:first-child), .pfe-card__body ::slotted(p:first-child) {\n  margin-top: 0;\n}\n\n.pfe-card__header ::slotted(h1:first-child), .pfe-card__body ::slotted(h1:first-child) {\n  margin-top: 0;\n}\n\n.pfe-card__header ::slotted(h2:first-child), .pfe-card__body ::slotted(h2:first-child) {\n  margin-top: 0;\n}\n\n.pfe-card__header ::slotted(h3:first-child), .pfe-card__body ::slotted(h3:first-child) {\n  margin-top: 0;\n}\n\n.pfe-card__header ::slotted(h4:first-child), .pfe-card__body ::slotted(h4:first-child) {\n  margin-top: 0;\n}\n\n.pfe-card__header ::slotted(h5:first-child), .pfe-card__body ::slotted(h5:first-child) {\n  margin-top: 0;\n}\n\n.pfe-card__header ::slotted(h6:first-child), .pfe-card__body ::slotted(h6:first-child) {\n  margin-top: 0;\n}\n","@mixin browser-query($browser-list) {\n  @each $browser in $browser-list {\n    @if $browser == ie11 {\n      @media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: none) { /* IE10+ */\n        @content;\n      }\n    }\n    @if $browser == edge12 {\n      @supports (-ms-accelerator: true) { /* Microsoft Edge Browser 12+ */\n        @content;\n      }\n    }\n    @if $browser == edge {\n      @supports (-ms-ime-align: auto) { /* Microsoft Edge Browser 16+ (All) */\n        @content;\n      }\n    }\n    @if $browser == firefox {\n      @media all and (min--moz-device-pixel-ratio:0) { /* Mozilla Firefox (All) */\n        @content;\n      }\n    }\n  }\n}\n\n@mixin pfe-transition($properties...) {\n  $return: null;\n  @each $property in $properties {\n    @if length($property) == 1 {\n      $return: append($return, #{$property} 250ms $pfe-global--animation-timing, comma);\n    }\n    @else if length($property) == 2 {\n      $return: append($return, nth($property, 1) nth($property, 2), comma);\n    }\n  }\n  transition: $return;\n}\n\n// Make a CSS arrow\n@mixin pfe-arrow($type, $color, $width: 8px, $height: 5px, $pseudo: false) {\n  $direction: (\n    up: 180deg,\n    down: 0deg,\n    right: -90deg,\n    left: 90deg,\n  );\n  border-style: #{pfe-var(surface--border-style)};\n  border-width: $width $height 0;\n  border-color: transparent;\n  border-top-color: $color;\n  transform: rotate(map-get($direction, $type));\n  @if $pseudo {\n    display: inline-block;\n    content: \"\";\n    @content;\n  }\n}\n\n@mixin pfe-arrow-color($color) {\n  border-top-color: $color;\n}\n\n@mixin pfe-print-media {\n  @media print {\n    @content;\n  }\n}\n\n@mixin pfe-print-background {\n  -webkit-print-color-adjust: exact;\n  color-adjust: exact;\n}\n\n@mixin pfe-no-print-background {\n  @include pfe-print-media {\n    background-color: white !important;\n    background-image: none !important;\n    box-shadow: none !important;\n  }\n}\n\n@mixin pfe-pipe( $position: right, $padding: 0, $margin: 0, $color: $border-color) {\n  border: #{pfe-var(surface--border-width)} #{pfe-var(surface--border-style)} transparent;\n  border-#{$position}-color: $color;\n  @if $position == right {\n    padding-left: $padding;\n    margin-right: $margin;\n  }\n  @else if $position == left {\n    padding-right: $padding;\n    margin-left: $margin;\n  }\n}\n\n@mixin pfe-retina {\n  @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {\n    @content;\n  }\n}\n\n@mixin pfe-icon($path, $display: flex, $size: 1em) {\n  display: #{$display};\n  @if $path {\n    background: #{$path} no-repeat;\n    background-size: contain;\n    background-position: center;\n  }\n  width: #{$size};\n  height: #{$size};\n  @content;\n}\n"]}